function FrontBase(){}function Auth(){this.scrollWrapper=$(".scroll-wrapper"),this.maskWrapper=$(".mask-wrapper")}FrontBase.prototype.run=function(){this.ListenAuthBoxHover()},FrontBase.prototype.ListenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptcha(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenSmsCaptcha=function(){var a=$(".sms-captcha-btn"),n=$(".signup-group input[name='telephone']");a.click(function(){var t=n.val();t||messageBox.showInfo("请输入手机号码！ "),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){if(200==t.code){messageBox.showSuccess("短信验证码发送成功！ "),a.addClass("disabled");var n=60;a.unbind("click");var e=setInterval(function(){a.text(n+"s"),--n<=0&&(clearInterval(e),a.removeClass("disabled"),a.text("发送验证码"))},1e3)}},fail:function(t){console.log(t)}})})},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$("#signin-btn"),e=$("#signup-btn"),a=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),o=t.find('input[name="telephone"]'),s=t.find('input[name="password"]'),r=t.find('input[name="remember"]');t.find(".submit-btn").click(function(t){t.preventDefault();var n=o.val(),e=s.val(),a=r.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:n,password:e,remember:a?1:0},success:function(t){i.hideEvent(),window.location.reload()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var r=this,t=$(".signup-group"),c=t.find("input[name='telephone']"),p=t.find("input[name='username']"),u=t.find("input[name='img_captcha']"),l=t.find("input[name='password1']"),h=t.find("input[name='password2']"),f=t.find("input[name='sms_captcha']");t.find(".submit-btn").click(function(t){t.preventDefault();var n=c.val(),e=p.val(),a=u.val(),i=l.val(),o=h.val(),s=f.val();xfzajax.post({url:"/account/register/",data:{telephone:n,username:e,img_captcha:a,password1:i,password2:o,sms_captcha:s},success:function(t){r.hideEvent(),window.location.reload()},fail:function(t){window.messageBox.showError("服务器内部错误！")}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getDate(),a=((new Date).getTime()-e)/1e3;return a<60?"刚刚":60<=a&&a<3600?(minutes=parseInt(a/60),minutes+"%分钟前"):3600<=a&&a<86400?(hours=parseInt(a/60/60),hours+"%小时前"):86400<=a&&a<2592e3?(days=parseInt(a/60/60/24),days+"%天前"):n.getFullYear()+"年"+n.getMonth()+"月"+n.getDay()+"日 "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
