function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){var n=this;n.page=2,n.category_id=0,n.loadBtn=$("#load-more-btn")}Banner.prototype.initBanner=function(){var n=this,t=n.liList.eq(0).clone(),e=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(t),n.bannerUl.prepend(e),this.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControl=function(){for(var n=this,t=0;t<n.bannerCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}n.pageControl.css({width:12*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.toggleArrow=function(n){var t=this;n?(t.leftArrow.show(),t.rightArrow.show()):(t.leftArrow.hide(),t.rightArrow.hide())},Banner.prototype.animate=function(){var n=this;n.bannerUl.stop().animate({left:-798*n.index},500);var t=n.index;t=0===t?n.bannerCount-1:t===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;$("#banner-ul");this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerWidth*n.bannerCount}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Banner.prototype.run=function(){this.initBanner(),this.initPageControl(),this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.listenPageControl()},Index.prototype.listenLoadMoreEvent=function(){var i=this,r=$("#load-more-btn");r.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.page+=1}else r.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var o=this;$(".list-tab").children().click(function(){var r=$(this),a=r.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:a,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),o.page=2,o.category_id=a,r.addClass("active").siblings().removeClass("active"),o.loadBtn.show()}}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
