function News(){this.progressGroup=$("#progress-group")}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFileEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var e=o[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){var s=this;$("#thumbnail-btn").change(function(){var i=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){for(var t=e.data.token,o=0;o<=i.name.split(".").length;o++)if(o===i.name.split(".").length)var n=(new Date).getTime()+"."+i.name.split(".")[o];var r={fname:n,params:{},mimeType:["image/png","video/x-ms-wmv","image/jpeg","audio/mp3","audio/mpeg"]},a={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(i,n,t,r,a).subscribe({next:s.updateUploadProgress,error:s.uploadErrorEvent,complete:s.complateUploadEvent})}}})})},News.prototype.updateUploadProgress=function(e){var t=e.total.percent,o=t.toFixed(0)+"%";News.progressGroup.show();var n=$(".progress-bar");100===t&&(n.removeAttr("style",1),n.removeAttr().val()),n.css({width:o}),n.text(o)},News.prototype.uploadErrorEvent=function(e){window.messageBox.showError(e.message),$("#progress-group").hide()},News.prototype.complateUploadEvent=function(e){var t="http://q2yx3wc2f.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(t),$("#progress-group").hide()},News.prototype.listensubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),o=$("input[name='title']").val(),n=$("select[name='category']").val(),r=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),i=window.ue.getContent(),s="";s=t?"/cms/edit_news/":"/cms/news_release/",xfzajax.post({url:s,data:{title:o,category:n,desc:r,thumbnail:a,content:i,pk:t},success:function(e){200===e.code&&(t?xfzalert.alertSuccess("新闻编辑成功! ",function(){window.location.reload()}):xfzalert.alertSuccess("新闻添加成功！ ",function(){window.location.reload()}))}})})},News.prototype.run=function(){var e=this;e.initUEditor(),e.listensubmitEvent(),e.listenUploadFileEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
